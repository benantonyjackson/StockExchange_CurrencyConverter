<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><!-- Generated by JAX-WS RI (https://github.com/eclipse-ee4j/metro-jax-ws). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://StockBrokeringWebService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://StockBrokeringWebService/" name="StockBrokeringWebService">
<types>
<xsd:schema>
<xsd:import namespace="http://StockBrokeringWebService/" schemaLocation="http://localhost:8080/StockBrokeringWebService/StockBrokeringWebService?xsd=1"/>
</xsd:schema>
</types>
<message name="convertCurrencies">
<part name="parameters" element="tns:convertCurrencies"/>
</message>
<message name="convertCurrenciesResponse">
<part name="parameters" element="tns:convertCurrenciesResponse"/>
</message>
<message name="UnsupportedEncodingException">
<part name="fault" element="tns:UnsupportedEncodingException"/>
</message>
<message name="CurrencyConversionException">
<part name="fault" element="tns:CurrencyConversionException"/>
</message>
<message name="genorateRandomCompanyData">
<part name="parameters" element="tns:genorateRandomCompanyData"/>
</message>
<message name="genorateRandomCompanyDataResponse">
<part name="parameters" element="tns:genorateRandomCompanyDataResponse"/>
</message>
<message name="DatatypeConfigurationException">
<part name="fault" element="tns:DatatypeConfigurationException"/>
</message>
<message name="IOException">
<part name="fault" element="tns:IOException"/>
</message>
<message name="getCompaniesByName">
<part name="parameters" element="tns:getCompaniesByName"/>
</message>
<message name="getCompaniesByNameResponse">
<part name="parameters" element="tns:getCompaniesByNameResponse"/>
</message>
<message name="Exception">
<part name="fault" element="tns:Exception"/>
</message>
<message name="getCompanyNamesAndSymbols">
<part name="parameters" element="tns:getCompanyNamesAndSymbols"/>
</message>
<message name="getCompanyNamesAndSymbolsResponse">
<part name="parameters" element="tns:getCompanyNamesAndSymbolsResponse"/>
</message>
<message name="filterByAvailibleShares">
<part name="parameters" element="tns:filterByAvailibleShares"/>
</message>
<message name="filterByAvailibleSharesResponse">
<part name="parameters" element="tns:filterByAvailibleSharesResponse"/>
</message>
<message name="GetCompaniesBySymbol">
<part name="parameters" element="tns:GetCompaniesBySymbol"/>
</message>
<message name="GetCompaniesBySymbolResponse">
<part name="parameters" element="tns:GetCompaniesBySymbolResponse"/>
</message>
<message name="getCurrencies">
<part name="parameters" element="tns:getCurrencies"/>
</message>
<message name="getCurrenciesResponse">
<part name="parameters" element="tns:getCurrenciesResponse"/>
</message>
<message name="orderCompanies">
<part name="parameters" element="tns:orderCompanies"/>
</message>
<message name="orderCompaniesResponse">
<part name="parameters" element="tns:orderCompaniesResponse"/>
</message>
<message name="NotSortableFieldException">
<part name="fault" element="tns:NotSortableFieldException"/>
</message>
<message name="InvalidOrderException">
<part name="fault" element="tns:InvalidOrderException"/>
</message>
<message name="buyShare">
<part name="parameters" element="tns:buyShare"/>
</message>
<message name="buyShareResponse">
<part name="parameters" element="tns:buyShareResponse"/>
</message>
<message name="CompanyNotFoundException">
<part name="fault" element="tns:CompanyNotFoundException"/>
</message>
<message name="getCompanyData">
<part name="parameters" element="tns:getCompanyData"/>
</message>
<message name="getCompanyDataResponse">
<part name="parameters" element="tns:getCompanyDataResponse"/>
</message>
<message name="MarketStackAPIException">
<part name="fault" element="tns:MarketStackAPIException"/>
</message>
<message name="OverwriteCompanyDataException">
<part name="fault" element="tns:OverwriteCompanyDataException"/>
</message>
<message name="CompanyDataUnmarshellException">
<part name="fault" element="tns:CompanyDataUnmarshellException"/>
</message>
<message name="CompanyDataGenerationException">
<part name="fault" element="tns:CompanyDataGenerationException"/>
</message>
<message name="filterByPrice">
<part name="parameters" element="tns:filterByPrice"/>
</message>
<message name="filterByPriceResponse">
<part name="parameters" element="tns:filterByPriceResponse"/>
</message>
<portType name="StockBrokeringWebService">
<operation name="convertCurrencies">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/convertCurrenciesRequest" message="tns:convertCurrencies"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/convertCurrenciesResponse" message="tns:convertCurrenciesResponse"/>
<fault message="tns:UnsupportedEncodingException" name="UnsupportedEncodingException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/convertCurrencies/Fault/UnsupportedEncodingException"/>
<fault message="tns:CurrencyConversionException" name="CurrencyConversionException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/convertCurrencies/Fault/CurrencyConversionException"/>
</operation>
<operation name="genorateRandomCompanyData">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/genorateRandomCompanyDataRequest" message="tns:genorateRandomCompanyData"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/genorateRandomCompanyDataResponse" message="tns:genorateRandomCompanyDataResponse"/>
<fault message="tns:DatatypeConfigurationException" name="DatatypeConfigurationException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/genorateRandomCompanyData/Fault/DatatypeConfigurationException"/>
<fault message="tns:IOException" name="IOException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/genorateRandomCompanyData/Fault/IOException"/>
</operation>
<operation name="getCompaniesByName">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompaniesByNameRequest" message="tns:getCompaniesByName"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompaniesByNameResponse" message="tns:getCompaniesByNameResponse"/>
<fault message="tns:Exception" name="Exception" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompaniesByName/Fault/Exception"/>
</operation>
<operation name="getCompanyNamesAndSymbols">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyNamesAndSymbolsRequest" message="tns:getCompanyNamesAndSymbols"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyNamesAndSymbolsResponse" message="tns:getCompanyNamesAndSymbolsResponse"/>
<fault message="tns:IOException" name="IOException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyNamesAndSymbols/Fault/IOException"/>
</operation>
<operation name="filterByAvailibleShares">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByAvailibleSharesRequest" message="tns:filterByAvailibleShares"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByAvailibleSharesResponse" message="tns:filterByAvailibleSharesResponse"/>
<fault message="tns:Exception" name="Exception" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByAvailibleShares/Fault/Exception"/>
</operation>
<operation name="GetCompaniesBySymbol">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/GetCompaniesBySymbolRequest" message="tns:GetCompaniesBySymbol"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/GetCompaniesBySymbolResponse" message="tns:GetCompaniesBySymbolResponse"/>
<fault message="tns:Exception" name="Exception" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/GetCompaniesBySymbol/Fault/Exception"/>
</operation>
<operation name="getCurrencies">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCurrenciesRequest" message="tns:getCurrencies"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCurrenciesResponse" message="tns:getCurrenciesResponse"/>
</operation>
<operation name="orderCompanies">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/orderCompaniesRequest" message="tns:orderCompanies"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/orderCompaniesResponse" message="tns:orderCompaniesResponse"/>
<fault message="tns:NotSortableFieldException" name="NotSortableFieldException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/orderCompanies/Fault/NotSortableFieldException"/>
<fault message="tns:InvalidOrderException" name="InvalidOrderException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/orderCompanies/Fault/InvalidOrderException"/>
</operation>
<operation name="buyShare">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/buyShareRequest" message="tns:buyShare"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/buyShareResponse" message="tns:buyShareResponse"/>
<fault message="tns:CompanyNotFoundException" name="CompanyNotFoundException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/buyShare/Fault/CompanyNotFoundException"/>
<fault message="tns:Exception" name="Exception" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/buyShare/Fault/Exception"/>
</operation>
<operation name="getCompanyData">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyDataRequest" message="tns:getCompanyData"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyDataResponse" message="tns:getCompanyDataResponse"/>
<fault message="tns:MarketStackAPIException" name="MarketStackAPIException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/MarketStackAPIException"/>
<fault message="tns:OverwriteCompanyDataException" name="OverwriteCompanyDataException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/OverwriteCompanyDataException"/>
<fault message="tns:NotSortableFieldException" name="NotSortableFieldException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/NotSortableFieldException"/>
<fault message="tns:CompanyDataUnmarshellException" name="CompanyDataUnmarshellException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/CompanyDataUnmarshellException"/>
<fault message="tns:CompanyDataGenerationException" name="CompanyDataGenerationException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/CompanyDataGenerationException"/>
<fault message="tns:InvalidOrderException" name="InvalidOrderException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/InvalidOrderException"/>
<fault message="tns:UnsupportedEncodingException" name="UnsupportedEncodingException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/UnsupportedEncodingException"/>
<fault message="tns:CurrencyConversionException" name="CurrencyConversionException" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/getCompanyData/Fault/CurrencyConversionException"/>
</operation>
<operation name="filterByPrice">
<input wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByPriceRequest" message="tns:filterByPrice"/>
<output wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByPriceResponse" message="tns:filterByPriceResponse"/>
<fault message="tns:Exception" name="Exception" wsam:Action="http://StockBrokeringWebService/StockBrokeringWebService/filterByPrice/Fault/Exception"/>
</operation>
</portType>
<binding name="StockBrokeringWebServicePortBinding" type="tns:StockBrokeringWebService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="convertCurrencies">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="UnsupportedEncodingException">
<soap:fault name="UnsupportedEncodingException" use="literal"/>
</fault>
<fault name="CurrencyConversionException">
<soap:fault name="CurrencyConversionException" use="literal"/>
</fault>
</operation>
<operation name="genorateRandomCompanyData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="DatatypeConfigurationException">
<soap:fault name="DatatypeConfigurationException" use="literal"/>
</fault>
<fault name="IOException">
<soap:fault name="IOException" use="literal"/>
</fault>
</operation>
<operation name="getCompaniesByName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal"/>
</fault>
</operation>
<operation name="getCompanyNamesAndSymbols">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="IOException">
<soap:fault name="IOException" use="literal"/>
</fault>
</operation>
<operation name="filterByAvailibleShares">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal"/>
</fault>
</operation>
<operation name="GetCompaniesBySymbol">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal"/>
</fault>
</operation>
<operation name="getCurrencies">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="orderCompanies">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="NotSortableFieldException">
<soap:fault name="NotSortableFieldException" use="literal"/>
</fault>
<fault name="InvalidOrderException">
<soap:fault name="InvalidOrderException" use="literal"/>
</fault>
</operation>
<operation name="buyShare">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CompanyNotFoundException">
<soap:fault name="CompanyNotFoundException" use="literal"/>
</fault>
<fault name="Exception">
<soap:fault name="Exception" use="literal"/>
</fault>
</operation>
<operation name="getCompanyData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="MarketStackAPIException">
<soap:fault name="MarketStackAPIException" use="literal"/>
</fault>
<fault name="OverwriteCompanyDataException">
<soap:fault name="OverwriteCompanyDataException" use="literal"/>
</fault>
<fault name="NotSortableFieldException">
<soap:fault name="NotSortableFieldException" use="literal"/>
</fault>
<fault name="CompanyDataUnmarshellException">
<soap:fault name="CompanyDataUnmarshellException" use="literal"/>
</fault>
<fault name="CompanyDataGenerationException">
<soap:fault name="CompanyDataGenerationException" use="literal"/>
</fault>
<fault name="InvalidOrderException">
<soap:fault name="InvalidOrderException" use="literal"/>
</fault>
<fault name="UnsupportedEncodingException">
<soap:fault name="UnsupportedEncodingException" use="literal"/>
</fault>
<fault name="CurrencyConversionException">
<soap:fault name="CurrencyConversionException" use="literal"/>
</fault>
</operation>
<operation name="filterByPrice">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal"/>
</fault>
</operation>
</binding>
<service name="StockBrokeringWebService">
<port name="StockBrokeringWebServicePort" binding="tns:StockBrokeringWebServicePortBinding">
<soap:address location="http://localhost:8080/StockBrokeringWebService/StockBrokeringWebService"/>
</port>
</service>
</definitions>