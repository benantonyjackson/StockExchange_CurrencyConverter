
import com.mycompany.stockbrokerclientapplication.Company;
//import com.mycompany.stockbrokerclientapplication.CompanyList;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;

import com.mycompany.stockbrokerclientapplication.StockBrokeringWebService_Service;
import com.mycompany.stockbrokerclientapplication.StockBrokeringWebService;
import com.mycompany.stockbrokerclientapplication.Company;
import com.mycompany.stockbrokerclientapplication.Pair;
import java.awt.Dialog;
import java.awt.event.ItemEvent;
import java.net.ConnectException;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.xml.ws.http.HTTPException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ben
 */



public class MainMenu extends javax.swing.JFrame {
    
    private List listOfCompanies = null; 
    public String orderBy = "";
    public String order = "";
    public String currecny = "";

    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        System.out.println("Appliction started");
        scrlPnCompanyView.getVerticalScrollBar().setUnitIncrement(20);
        
        String selectedCurrency = "";
        
        btnPriceGreaterThan.setActionCommand("greater");
        btnPriceLessThan.setActionCommand("less");
        btnPriceEqualTo.setActionCommand("equal");
        
        //Loads list of currencies 
        try { 
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
            
            java.util.List<java.lang.String> result = port.getCurrencies();
            
            for (String i: result)
            {
                cmbCurrency.addItem(i);
            }
            cmbCurrency.setSelectedItem("EUR");
            
            selectedCurrency = "EUR";
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured when attempting to fetch the list of currencies \n"
            + "For this session, all share prices will be displayed in Euros\n\n");
        }

        //Load company data
        try 
        { 
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();

            populateCompayView(port.getCompanyData(selectedCurrency, orderBy, order));
        }
        catch (Exception ex) 
        {
            JOptionPane.showMessageDialog(this, "Sorry, an error occured when"
                    + "trying to connect to the web service\n\n" + 
                    "Full error message: " + ex.getMessage());
        }

    }
    
    void populateCompayView(List<Company> companies)
    {
        //companies = convertDisplayedCurrecnies(companies);
        listOfCompanies = companies;
        
        JPanel jp = new JPanel();
        jp.setLayout(new BoxLayout(jp, BoxLayout.PAGE_AXIS));
        jp.setMaximumSize(scrlPnCompanyView.getSize());
        
        for (Company c: companies)
        {
            CompanyView cv = new CompanyView();
            
            cv.updateView(c);
            
            jp.add(cv);
        }
        
        
        scrlPnCompanyView.setViewportView(jp);
        lblNumberOfResult.setText("Results: " + companies.size());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderButtonGroup = new javax.swing.ButtonGroup();
        filterPriceButtonGroup = new javax.swing.ButtonGroup();
        scrlPnCompanyView = new javax.swing.JScrollPane();
        lblNumberOfResult = new javax.swing.JLabel();
        txtFilterBySymbol = new javax.swing.JTextField();
        btnFilterBySymbol = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtFilterByName = new javax.swing.JTextField();
        btnFilterByName = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCurrency = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnConvert = new javax.swing.JButton();
        btnSymbolAsc = new javax.swing.JRadioButton();
        btnSymbolDesc = new javax.swing.JRadioButton();
        btnNameDesc = new javax.swing.JRadioButton();
        btnNameAsc = new javax.swing.JRadioButton();
        btnPriceDesc = new javax.swing.JRadioButton();
        btnPriceAsc = new javax.swing.JRadioButton();
        txtFilterByPrice = new javax.swing.JTextField();
        btnFilterByPrice = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnPriceGreaterThan = new javax.swing.JRadioButton();
        btnPriceLessThan = new javax.swing.JRadioButton();
        btnPriceEqualTo = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scrlPnCompanyView.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblNumberOfResult.setText("Results: 0");

        btnFilterBySymbol.setText("Search");
        btnFilterBySymbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterBySymbolActionPerformed(evt);
            }
        });

        jLabel1.setText("Filter by symbol");

        btnFilterByName.setText("Search");
        btnFilterByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterByNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Filter by name");
        jLabel2.setToolTipText("");

        cmbCurrency.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCurrencyItemStateChanged(evt);
            }
        });

        jLabel3.setText("Currency");

        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        orderButtonGroup.add(btnSymbolAsc);
        btnSymbolAsc.setText("Accending");
        btnSymbolAsc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnSymbolAscItemStateChanged(evt);
            }
        });

        orderButtonGroup.add(btnSymbolDesc);
        btnSymbolDesc.setText("Descending");
        btnSymbolDesc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnSymbolDescItemStateChanged(evt);
            }
        });

        orderButtonGroup.add(btnNameDesc);
        btnNameDesc.setText("Descending");
        btnNameDesc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnNameDescItemStateChanged(evt);
            }
        });

        orderButtonGroup.add(btnNameAsc);
        btnNameAsc.setText("Accending");
        btnNameAsc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnNameAscItemStateChanged(evt);
            }
        });

        orderButtonGroup.add(btnPriceDesc);
        btnPriceDesc.setText("Descending");
        btnPriceDesc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnPriceDescItemStateChanged(evt);
            }
        });

        orderButtonGroup.add(btnPriceAsc);
        btnPriceAsc.setText("Accending");
        btnPriceAsc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnPriceAscItemStateChanged(evt);
            }
        });

        btnFilterByPrice.setText("Search");
        btnFilterByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterByPriceActionPerformed(evt);
            }
        });

        jLabel4.setText("Filter by price");
        jLabel4.setToolTipText("");

        filterPriceButtonGroup.add(btnPriceGreaterThan);
        btnPriceGreaterThan.setText("Greater Than");

        filterPriceButtonGroup.add(btnPriceLessThan);
        btnPriceLessThan.setText("Less Than");

        filterPriceButtonGroup.add(btnPriceEqualTo);
        btnPriceEqualTo.setText("Equal to");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(scrlPnCompanyView, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFilterBySymbol, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFilterBySymbol)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSymbolAsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSymbolDesc))
                            .addComponent(lblNumberOfResult)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFilterByName, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFilterByName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNameAsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNameDesc))
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(btnConvert))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFilterByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFilterByPrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPriceAsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPriceDesc))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPriceGreaterThan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPriceLessThan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPriceEqualTo)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlPnCompanyView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumberOfResult)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFilterBySymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilterBySymbol)
                    .addComponent(cmbCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSymbolAsc)
                    .addComponent(btnSymbolDesc))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnConvert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNameAsc)
                        .addComponent(btnNameDesc))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFilterByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFilterByName)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPriceAsc)
                        .addComponent(btnPriceDesc))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFilterByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFilterByPrice)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPriceGreaterThan)
                    .addComponent(btnPriceLessThan)
                    .addComponent(btnPriceEqualTo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterBySymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterBySymbolActionPerformed
        
        try { // Call Web Service Operation
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
            // TODO initialize WS operation arguments here
            java.lang.String symbol = txtFilterBySymbol.getText();
            // TODO process result here
            java.util.List<Company> companies = port.getCompaniesBySymbol(symbol, cmbCurrency.getSelectedItem().toString(), orderBy, order);
            
            populateCompayView(companies);
            
        } catch (Exception ex) {
            // TODO handle custom exceptions here
        }
    }//GEN-LAST:event_btnFilterBySymbolActionPerformed

    private void btnFilterByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterByNameActionPerformed
        
        try { // Call Web Service Operation
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
            
            
            
            java.lang.String name = txtFilterByName.getText();
            java.util.List<Company> companies = port.getCompaniesByName(name, currecny, orderBy, order);
            
            populateCompayView(companies);
            
        } catch (Exception ex) {
            // TODO handle custom exceptions here
        }

    }//GEN-LAST:event_btnFilterByNameActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        listOfCompanies = convertDisplayedCurrecnies(listOfCompanies);
        populateCompayView(listOfCompanies);
    }//GEN-LAST:event_btnConvertActionPerformed

    private void btnSymbolAscItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnSymbolAscItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "symbol";
            order = "ASC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnSymbolAscItemStateChanged

    private void btnSymbolDescItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnSymbolDescItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "symbol";
            order = "DESC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnSymbolDescItemStateChanged

    private void btnNameAscItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnNameAscItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "name";
            order = "ASC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnNameAscItemStateChanged

    private void btnNameDescItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnNameDescItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "name";
            order = "DESC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnNameDescItemStateChanged

    private void btnPriceDescItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnPriceDescItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "price";
            order = "DESC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnPriceDescItemStateChanged

    private void btnPriceAscItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnPriceAscItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            orderBy = "price";
            order = "ASC";
            
            orderCompanies(listOfCompanies, orderBy, order);
        }
    }//GEN-LAST:event_btnPriceAscItemStateChanged

    private void btnFilterByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterByPriceActionPerformed
     
        try { // Call Web Service Operation
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
            // TODO initialize WS operation arguments here
            float value = Float.valueOf(txtFilterByPrice.getText());
            //String operator = ((JRadioButton)filterPriceButtonGroup.getSelection()).getText();
            
            String operator = filterPriceButtonGroup.getSelection().getActionCommand();
            
            System.out.println("Operator" + operator);

            String currency = "";
            try {
                currency = cmbCurrency.getSelectedItem().toString();
            } catch (Exception ex) {
            }
            // TODO process result here
            List<Company> companies = port.filterByPrice(value, operator, currency, orderBy, order);
            
            populateCompayView(companies);
        } catch (Exception ex) {
           System.out.println("Error: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnFilterByPriceActionPerformed

    private void cmbCurrencyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCurrencyItemStateChanged
        if (evt.getID() == ItemEvent.SELECTED)
        {
            currecny = cmbCurrency.getSelectedItem().toString();
        }
    }//GEN-LAST:event_cmbCurrencyItemStateChanged
    
    
    List<Company> convertDisplayedCurrecnies(List companies) {
        String currentCurency = "";
        try{
            currentCurency = cmbCurrency.getSelectedItem().toString();
        }
        catch (NullPointerException ex)
        {
            System.out.println(ex.toString());
        }
        if (!currentCurency.equals("")) {
            for (Object obj : companies) {
                Company c = (Company) obj;
                if (!c.getSharePrice().getCurrency().equals(currentCurency)) {
                    try {

                        StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
                        StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
                        // TODO initialize WS operation arguments here
                        java.lang.String currencyType = cmbCurrency.getSelectedItem().toString();
                        // TODO process result here
                        //System.out.println(listOfCompanies.size());
                        return port.convertCurrencies(companies, currencyType);

                        //populateCompayView(result);
                    } catch (NullPointerException ex) {
                        System.out.println(ex.toString());
                    } catch (Exception ex) {
                        System.out.println(ex.toString());
                    }
                }
            }
        }

        return companies;
    }
    
    
    List<Company> orderCompanies(List<Company> companies, String orderBy, String order)
    {
        
        try { 
            StockBrokeringWebService_Service service = new StockBrokeringWebService_Service();
            StockBrokeringWebService port = service.getStockBrokeringWebServicePort();
            
            
            List<Company> response = port.orderCompanies(companies, orderBy, order);
            
            populateCompayView(response);
            
        } catch (Exception ex) {
            // TODO handle custom exceptions here
        }
        return companies;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnFilterByName;
    private javax.swing.JButton btnFilterByPrice;
    private javax.swing.JButton btnFilterBySymbol;
    private javax.swing.JRadioButton btnNameAsc;
    private javax.swing.JRadioButton btnNameDesc;
    private javax.swing.JRadioButton btnPriceAsc;
    private javax.swing.JRadioButton btnPriceDesc;
    private javax.swing.JRadioButton btnPriceEqualTo;
    private javax.swing.JRadioButton btnPriceGreaterThan;
    private javax.swing.JRadioButton btnPriceLessThan;
    private javax.swing.JRadioButton btnSymbolAsc;
    private javax.swing.JRadioButton btnSymbolDesc;
    private javax.swing.JComboBox<String> cmbCurrency;
    private javax.swing.ButtonGroup filterPriceButtonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblNumberOfResult;
    private javax.swing.ButtonGroup orderButtonGroup;
    private javax.swing.JScrollPane scrlPnCompanyView;
    private javax.swing.JTextField txtFilterByName;
    private javax.swing.JTextField txtFilterByPrice;
    private javax.swing.JTextField txtFilterBySymbol;
    // End of variables declaration//GEN-END:variables

}
